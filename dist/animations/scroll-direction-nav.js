"use strict";(()=>{var o=class{constructor({initialOffset:i,onDirectionChange:e}){this.onDirectionChange=void 0;this.scrollDirection="initial";this.initialOffset=120;this.removeListener=void 0;this.setupSubscriptions=()=>{window.addEventListener("scroll",this.handleScrollDirection),this.removeListener=()=>window.removeEventListener("scroll",this.handleScrollDirection)};this.handleScrollDirection=()=>{let i=window.scrollY,e="initial";i>this.initialOffset&&(i<this.scrollPosition?e="up":e="down"),e!==this.scrollDirection&&this.onDirectionChange?.(e),this.scrollPosition=i,this.scrollDirection=e};this.scrollPosition=0,i&&(this.initialOffset=i),this.onDirectionChange=e,this.setupSubscriptions()}dispose(){this.removeListener?.()}};var l=()=>{let n=document.querySelector("[data-navbar]");if(!n)return;let i=Number.parseFloat(n.dataset.initialOffset||""),e=Number.isNaN(i)?1:i;new o({initialOffset:e,onDirectionChange:t=>{if(t==="up"||t==="initial"){n.classList.remove("hide-navbar");return}n.classList.add("hide-navbar")}}),(()=>{let t=document.querySelector("[data-navbar]");if(!t)return;new IntersectionObserver(r=>{for(let s of r)s.isIntersecting?t?.classList.add("below--top"):t?.classList.remove("below--top")},{root:null,threshold:.1}).observe(document.body)})()};l();})();
