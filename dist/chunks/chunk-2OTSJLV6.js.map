{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@finsweet+ts-utils@0.40.0/node_modules/@finsweet/ts-utils/dist/helpers/wait.js", "../../src/utils/constants.ts", "../../src/utils/common.ts", "../../src/utils/valueGetters.ts", "../../src/utils/wrap-words.ts"],
  "sourcesContent": ["/**\n * @returns Awaitable promise for waiting X time.\n * @param time\n */\nexport const wait = (time) => new Promise((resolve) => setTimeout(resolve, time));\n", "export const selectors = {\n  revealType: \"[data-reveal-type]\",\n  revealParent: \"[data-reveal-parent]\",\n  toggleScroll: \"[data-toggle-scroll]\",\n  startScroll: \"[data-start-scroll]\",\n  stopScroll: \"[data-stop-scroll]\",\n  resetAnimation: \"[data-reset-animation]\",\n  keepSplit: \"[data-reset-animation]\",\n} as const;\n\nconst revealTypeValuesArray = [\"chars\", \"words\", \"lines\"] as const;\nexport const revealTypeValuesSet: Set<string> = new Set(revealTypeValuesArray);\nexport type RevealTypeValue = (typeof revealTypeValuesArray)[number];\n\nconst animationTypeValuesArray = [\"from-top\", \"from-bottom\", \"fade-from-bottom-left\"] as const;\nexport const animationTypeValuesSet: Set<string> = new Set(animationTypeValuesArray);\nexport type AnimationTypeValue = (typeof animationTypeValuesArray)[number];\n\nexport type AnimationDataProps = {\n  revealType: RevealTypeValue;\n  animationType: AnimationTypeValue;\n  duration: number;\n  easing: string;\n  delay: number;\n  staggerDelay: number;\n  fromX: string | undefined;\n  fromY: string | undefined;\n  fromOpacity: string | undefined;\n  viewThreshold: number;\n  resetAnimation: string | undefined;\n};\n\nexport type AnimationDataKeys = keyof AnimationDataProps;\n\nconst gsapEaseArray = [\n  \"power1\",\n  \"power1.in\",\n  \"power1.out\",\n  \"power1.inOut\",\n  \"power2\",\n  \"power2.in\",\n  \"power2.out\",\n  \"power2.inOut\",\n  \"power3\",\n  \"power3.in\",\n  \"power3.out\",\n  \"power3.inOut\",\n  \"power4\",\n  \"power4.in\",\n  \"power4.out\",\n  \"power4.inOut\",\n  \"back\",\n  \"back.in\",\n  \"back.out\",\n  \"back.inOut\",\n  \"bounce\",\n  \"bounce.in\",\n  \"bounce.out\",\n  \"bounce.inOut\",\n  \"circ\",\n  \"circ.in\",\n  \"circ.out\",\n  \"circ.inOut\",\n  \"elastic\",\n  \"elastic.in\",\n  \"elastic.out\",\n  \"elastic.inOut\",\n  \"expo\",\n  \"expo.in\",\n  \"expo.out\",\n  \"expo.inOut\",\n  \"sine\",\n  \"sine.in\",\n  \"sine.out\",\n  \"sine.inOut\",\n] as const;\nexport const gsapEaseSet: Set<string> = new Set(gsapEaseArray);\nexport type GsapEaseType = (typeof gsapEaseArray)[number];\n", "class AssertionError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"AssertionError\";\n  }\n}\n\nexport const assert = <T>(value: T, message: string, condition?: (value: T) => boolean) => {\n  if (\n    value === null ||\n    value === undefined ||\n    Number.isNaN(value) ||\n    (condition && !condition(value))\n  ) {\n    throw new AssertionError(message);\n  }\n  return value;\n};\n\nexport const fallback = <T>(\n  value: T,\n  replacementValue: NonUndefined<T>,\n  condition?: (value: T) => boolean\n) => {\n  if (value !== undefined && condition && !condition(value)) {\n    return replacementValue;\n  }\n  if (value === undefined || Number.isNaN(value)) {\n    return replacementValue;\n  }\n\n  if (value === 0) return value;\n\n  return value;\n};\n\nexport const wait = (ms: number) => new Promise((res) => setTimeout(res, ms));\n", "import { fallback } from \"./common\";\r\nimport {\r\n  type AnimationDataKeys,\r\n  type AnimationDataProps,\r\n  type AnimationTypeValue,\r\n  animationTypeValuesSet,\r\n  gsapEaseSet,\r\n  type GsapEaseType,\r\n  type RevealTypeValue,\r\n  revealTypeValuesSet,\r\n} from \"./constants\";\r\n\r\nexport const getAnimationValues = (\r\n  element: HTMLElement,\r\n  defaultValues?: AnimationDataProps,\r\n  parentEl?: HTMLElement\r\n): AnimationDataProps => {\r\n  const {\r\n    animationType,\r\n    delay,\r\n    duration,\r\n    easing,\r\n    revealType,\r\n    staggerDelay,\r\n    fromX,\r\n    fromY,\r\n    fromOpacity,\r\n    viewThreshold,\r\n    resetAnimation,\r\n  } = element.dataset as Record<AnimationDataKeys, string | undefined>;\r\n  const parentViewThreshold = parentEl?.dataset.viewThreshold;\r\n\r\n  const selectedAnimationType = fallback(\r\n    animationType,\r\n    defaultValues?.animationType ?? \"from-bottom\",\r\n    (value) => value !== undefined && animationTypeValuesSet.has(value)\r\n  ) as AnimationTypeValue;\r\n\r\n  const selectedRevealType = fallback(\r\n    revealType,\r\n    defaultValues?.revealType ?? \"chars\",\r\n    (value) => value !== undefined && revealTypeValuesSet.has(value)\r\n  ) as RevealTypeValue;\r\n\r\n  const selectedEasing = fallback(\r\n    easing,\r\n    defaultValues?.easing ?? \"powe3.out\",\r\n    (value) => value !== undefined && gsapEaseSet.has(value)\r\n  ) as GsapEaseType;\r\n\r\n  const selectedDelay = fallback(Number.parseFloat(delay || \"\"), defaultValues?.delay ?? 0);\r\n  const selectedViewThreshold = fallback(\r\n    Number.parseFloat(viewThreshold || parentViewThreshold || \"\"),\r\n    defaultValues?.viewThreshold ?? 0.8\r\n  );\r\n  const selectedDuration = fallback(\r\n    Number.parseFloat(duration || \"\"),\r\n    defaultValues?.duration ?? 0.5\r\n  );\r\n  const selectedStaggerDelay = fallback(\r\n    Number.parseFloat(staggerDelay || \"\"),\r\n    defaultValues?.staggerDelay ?? 0.05\r\n  );\r\n\r\n  return {\r\n    animationType: selectedAnimationType,\r\n    revealType: selectedRevealType,\r\n    delay: selectedDelay,\r\n    duration: selectedDuration,\r\n    easing: selectedEasing,\r\n    staggerDelay: selectedStaggerDelay,\r\n    fromX,\r\n    fromY,\r\n    fromOpacity,\r\n    viewThreshold: selectedViewThreshold,\r\n    resetAnimation,\r\n  };\r\n};\r\n", "/**\n * Wraps words containing hyphens in span elements to prevent unwanted word breaks\n * @param element The HTML element to process\n */\nexport function wrapHyphenatedWords(element: HTMLElement): HTMLElement {\n  // Process all text nodes that contain hyphens\n  const textNodes = getTextNodesWithHyphens(element);\n\n  textNodes.forEach((textNode) => {\n    const text = textNode.nodeValue || \"\";\n\n    // Create a document fragment to hold the modified content\n    const fragment = document.createDocumentFragment();\n\n    // Split the text by spaces while preserving whitespace\n    const parts = text.split(/(\\s+)/);\n\n    for (const part of parts) {\n      // Check if the part contains a hyphen and is not just whitespace\n      if (part.includes(\"-\") && /\\S/.test(part)) {\n        const span = document.createElement(\"span\");\n        span.classList.add(\"split-word-nowrap\");\n        span.textContent = part;\n        fragment.appendChild(span);\n      } else {\n        // Keep non-hyphenated parts as they are\n        fragment.appendChild(document.createTextNode(part));\n      }\n    }\n\n    // Replace the original text node with our fragment\n    if (textNode.parentNode) {\n      textNode.parentNode.replaceChild(fragment, textNode);\n    }\n  });\n  return element;\n}\n\n/**\n * Gets all text nodes within an element that contain hyphens\n * @param element The element to search within\n * @returns Array of text nodes containing hyphens\n */\nfunction getTextNodesWithHyphens(element: Node): Text[] {\n  const result: Text[] = [];\n\n  // Use TreeWalker for efficient DOM traversal\n  const walker = document.createTreeWalker(element, NodeFilter.SHOW_TEXT, null);\n\n  let node;\n  while ((node = walker.nextNode())) {\n    const textNode = node as Text;\n    // Only include text nodes that contain hyphens\n    if (textNode.nodeValue && textNode.nodeValue.includes(\"-\")) {\n      result.push(textNode);\n    }\n  }\n\n  return result;\n}\n"],
  "mappings": "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",
  "names": []
}
