var N=e=>new Promise(t=>setTimeout(t,e));var G={revealType:"[data-reveal-type]",revealParent:"[data-reveal-parent]",toggleScroll:"[data-toggle-scroll]",startScroll:"[data-start-scroll]",stopScroll:"[data-stop-scroll]",resetAnimation:"[data-reset-animation]",keepSplit:"[data-reset-animation]"},V=["chars","words","lines"],m=new Set(V),D=["from-top","from-bottom","fade-from-bottom-left"],d=new Set(D),F=["power1","power1.in","power1.out","power1.inOut","power2","power2.in","power2.out","power2.inOut","power3","power3.in","power3.out","power3.inOut","power4","power4.in","power4.out","power4.inOut","back","back.in","back.out","back.inOut","bounce","bounce.in","bounce.out","bounce.inOut","circ","circ.in","circ.out","circ.inOut","elastic","elastic.in","elastic.out","elastic.inOut","expo","expo.in","expo.out","expo.inOut","sine","sine.in","sine.out","sine.inOut"],c=new Set(F);var a=(e,t,o)=>e!==void 0&&o&&!o(e)||e===void 0||Number.isNaN(e)?t:e;var I=(e,t,o)=>{let{animationType:i,delay:r,duration:l,easing:s,revealType:p,staggerDelay:u,fromX:f,fromY:y,fromOpacity:x,viewThreshold:T,resetAnimation:w}=e.dataset,g=o?.dataset.viewThreshold,h=a(i,t?.animationType??"from-bottom",n=>n!==void 0&&d.has(n)),b=a(p,t?.revealType??"chars",n=>n!==void 0&&m.has(n)),v=a(s,t?.easing??"powe3.out",n=>n!==void 0&&c.has(n)),S=a(Number.parseFloat(r||""),t?.delay??0),A=a(Number.parseFloat(T||g||""),t?.viewThreshold??.8),k=a(Number.parseFloat(l||""),t?.duration??.5),E=a(Number.parseFloat(u||""),t?.staggerDelay??.05);return{animationType:h,revealType:b,delay:S,duration:k,easing:v,staggerDelay:E,fromX:f,fromY:y,fromOpacity:x,viewThreshold:A,resetAnimation:w}};function X(e){return O(e).forEach(o=>{let i=o.nodeValue||"",r=document.createDocumentFragment(),l=i.split(/(\s+)/);for(let s of l)if(s.includes("-")&&/\S/.test(s)){let p=document.createElement("span");p.classList.add("split-word-nowrap"),p.textContent=s,r.appendChild(p)}else r.appendChild(document.createTextNode(s));o.parentNode&&o.parentNode.replaceChild(r,o)}),e}function O(e){let t=[],o=document.createTreeWalker(e,NodeFilter.SHOW_TEXT,null),i;for(;i=o.nextNode();){let r=i;r.nodeValue&&r.nodeValue.includes("-")&&t.push(r)}return t}export{N as a,G as b,I as c,X as d};
