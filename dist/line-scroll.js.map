{
  "version": 3,
  "sources": ["../src/animations/line-scroll.ts"],
  "sourcesContent": ["import \"./line-scroll.css\";\r\n\r\nimport {\r\n  afterWebflowReady,\r\n  getGsap,\r\n  getHtmlElement,\r\n  getMultipleHtmlElements,\r\n  type GSAPType,\r\n} from \"@taj-wf/utils\";\r\n\r\nconst PROPERTIES = {\r\n  element: \"line-scroll-animation\",\r\n  inactiveColor: \"line-scroll-inactive-color\",\r\n  activeColor: \"line-scroll-active-color\",\r\n};\r\n\r\ntype LineAnimationTL = {\r\n  tl: gsap.core.Timeline;\r\n  destroy: () => void;\r\n};\r\n\r\nconst getActiveScript = () => {\r\n  const currentModuleUrl = import.meta.url;\r\n  return getHtmlElement<HTMLScriptElement>({\r\n    selector: `script[src=\"${currentModuleUrl}\"]`,\r\n  });\r\n};\r\n\r\nconst lineScrollInit = () => {\r\n  const lineScrollElements = getMultipleHtmlElements({ selector: `[${PROPERTIES.element}]` });\r\n\r\n  if (!lineScrollElements) return;\r\n\r\n  const [gsap, SplitText, ScrollTrigger] = getGsap([\"SplitText\", \"ScrollTrigger\"]);\r\n\r\n  if (!gsap) return;\r\n\r\n  if (!SplitText) {\r\n    console.error(\"SplitText plugin script is not loaded\");\r\n    return;\r\n  }\r\n\r\n  if (!ScrollTrigger) {\r\n    console.error(\"Scroll trigger plugin script is not loaded\");\r\n    return;\r\n  }\r\n\r\n  const scriptTagElement = getActiveScript();\r\n\r\n  if (!scriptTagElement) return;\r\n\r\n  const globalInactiveColor = scriptTagElement.getAttribute(PROPERTIES.inactiveColor);\r\n  const globalActiveColor = scriptTagElement.getAttribute(PROPERTIES.activeColor);\r\n\r\n  const createLineAnimationTL = (lineElement: HTMLElement): LineAnimationTL => {\r\n    let tl: ReturnType<GSAPType[\"timeline\"]> | undefined = undefined;\r\n    let ctx: ReturnType<GSAPType[\"context\"]> | undefined = gsap.context(() => {\r\n      tl = gsap.timeline({\r\n        scrollTrigger: {\r\n          trigger: lineElement,\r\n          start: \"top 60%\",\r\n          end: \"bottom 60%\",\r\n          scrub: 1,\r\n        },\r\n      });\r\n      tl.from(lineElement, { \"--line-width\": 0, duration: 1 });\r\n    });\r\n    return {\r\n      tl: tl!,\r\n      destroy: () => {\r\n        tl?.revert();\r\n        tl = undefined;\r\n        ctx?.revert();\r\n        ctx = undefined;\r\n      },\r\n    };\r\n  };\r\n\r\n  for (const lineScrollElement of lineScrollElements) {\r\n    let animationTlArr: LineAnimationTL[] = [];\r\n    let splittedLines: HTMLElement[] = [];\r\n\r\n    const inactiveColor =\r\n      lineScrollElement.getAttribute(PROPERTIES.inactiveColor) || globalInactiveColor;\r\n    const activeColor = lineScrollElement.getAttribute(PROPERTIES.activeColor) || globalActiveColor;\r\n\r\n    const initSplitAnimation = () => {\r\n      SplitText.create(lineScrollElement, {\r\n        type: \"lines\",\r\n        autoSplit: true,\r\n        linesClass: \"line-scroll-splitted-line\",\r\n        onSplit: (split) => {\r\n          if (animationTlArr.length > 0) {\r\n            for (const tlObj of animationTlArr) {\r\n              tlObj.destroy();\r\n            }\r\n            animationTlArr = [];\r\n          }\r\n          splittedLines = split[\"lines\"] as HTMLElement[];\r\n          for (const lineElement of splittedLines) {\r\n            if (inactiveColor) {\r\n              lineElement.style.setProperty(\"--inactive-color\", inactiveColor);\r\n            }\r\n\r\n            if (activeColor) {\r\n              lineElement.style.setProperty(\"--active-color\", activeColor);\r\n            }\r\n            const lineAnimationTl = createLineAnimationTL(lineElement);\r\n            animationTlArr.push(lineAnimationTl);\r\n          }\r\n        },\r\n      });\r\n    };\r\n\r\n    initSplitAnimation();\r\n  }\r\n};\r\n\r\nafterWebflowReady(() => {\r\n  lineScrollInit();\r\n});\r\n"],
  "mappings": ";;;;;;;;AAUA,IAAM,aAAa;AAAA,EACjB,SAAS;AAAA,EACT,eAAe;AAAA,EACf,aAAa;AACf;AAOA,IAAM,kBAAkB,MAAM;AAC5B,QAAM,mBAAmB,YAAY;AACrC,SAAO,eAAkC;AAAA,IACvC,UAAU,eAAe,gBAAgB;AAAA,EAC3C,CAAC;AACH;AAEA,IAAM,iBAAiB,MAAM;AAC3B,QAAM,qBAAqB,wBAAwB,EAAE,UAAU,IAAI,WAAW,OAAO,IAAI,CAAC;AAE1F,MAAI,CAAC,mBAAoB;AAEzB,QAAM,CAAC,MAAM,WAAW,aAAa,IAAI,QAAQ,CAAC,aAAa,eAAe,CAAC;AAE/E,MAAI,CAAC,KAAM;AAEX,MAAI,CAAC,WAAW;AACd,YAAQ,MAAM,uCAAuC;AACrD;AAAA,EACF;AAEA,MAAI,CAAC,eAAe;AAClB,YAAQ,MAAM,4CAA4C;AAC1D;AAAA,EACF;AAEA,QAAM,mBAAmB,gBAAgB;AAEzC,MAAI,CAAC,iBAAkB;AAEvB,QAAM,sBAAsB,iBAAiB,aAAa,WAAW,aAAa;AAClF,QAAM,oBAAoB,iBAAiB,aAAa,WAAW,WAAW;AAE9E,QAAM,wBAAwB,CAAC,gBAA8C;AAC3E,QAAI,KAAmD;AACvD,QAAI,MAAmD,KAAK,QAAQ,MAAM;AACxE,WAAK,KAAK,SAAS;AAAA,QACjB,eAAe;AAAA,UACb,SAAS;AAAA,UACT,OAAO;AAAA,UACP,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AACD,SAAG,KAAK,aAAa,EAAE,gBAAgB,GAAG,UAAU,EAAE,CAAC;AAAA,IACzD,CAAC;AACD,WAAO;AAAA,MACL;AAAA,MACA,SAAS,MAAM;AACb,YAAI,OAAO;AACX,aAAK;AACL,aAAK,OAAO;AACZ,cAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAEA,aAAW,qBAAqB,oBAAoB;AAClD,QAAI,iBAAoC,CAAC;AACzC,QAAI,gBAA+B,CAAC;AAEpC,UAAM,gBACJ,kBAAkB,aAAa,WAAW,aAAa,KAAK;AAC9D,UAAM,cAAc,kBAAkB,aAAa,WAAW,WAAW,KAAK;AAE9E,UAAM,qBAAqB,MAAM;AAC/B,gBAAU,OAAO,mBAAmB;AAAA,QAClC,MAAM;AAAA,QACN,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,SAAS,CAAC,UAAU;AAClB,cAAI,eAAe,SAAS,GAAG;AAC7B,uBAAW,SAAS,gBAAgB;AAClC,oBAAM,QAAQ;AAAA,YAChB;AACA,6BAAiB,CAAC;AAAA,UACpB;AACA,0BAAgB,MAAM,OAAO;AAC7B,qBAAW,eAAe,eAAe;AACvC,gBAAI,eAAe;AACjB,0BAAY,MAAM,YAAY,oBAAoB,aAAa;AAAA,YACjE;AAEA,gBAAI,aAAa;AACf,0BAAY,MAAM,YAAY,kBAAkB,WAAW;AAAA,YAC7D;AACA,kBAAM,kBAAkB,sBAAsB,WAAW;AACzD,2BAAe,KAAK,eAAe;AAAA,UACrC;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,uBAAmB;AAAA,EACrB;AACF;AAEA,kBAAkB,MAAM;AACtB,iBAAe;AACjB,CAAC;",
  "names": []
}
